{"version":3,"sources":["views/UploadBook/UploadBook.js"],"names":["Home","JSON","parse","localStorage","getItem","useState","setCategory","bookTitle","setBookTitle","description","setDescription","dp","setDp","setPdf","bookUploaded","setBookUploaded","errValue","setErrValue","useDispatch","useSelector","state","useEffect","Fragment","className","type","placeholder","name","onChange","e","target","value","required","id","event","files","reader","FileReader","onload","result","readAsDataURL","onImageChange","for","console","log","webkitRelativePath","onClick","preventDefault","userId","axiosMain","post","desc","authname","booktype","then","response","status","data","catch","error","addBookHandler"],"mappings":"uOA+KeA,UA7JF,WACMC,KAAKC,MAAMC,aAAaC,QAAQ,aAAjD,IADiB,EAGeC,qBAHf,mBAGAC,GAHA,aAIiBD,qBAJjB,mBAIVE,EAJU,KAICC,EAJD,OAKqBH,qBALrB,mBAKVI,EALU,KAKGC,EALH,OAMGL,qBANH,mBAMVM,EANU,KAMNC,EANM,OAOKP,qBAPL,mBAOLQ,GAPK,aAQuBR,oBAAS,GARhC,mBAQVS,EARU,KAQIC,EARJ,OAUeV,mBAAS,MAVxB,mBAUVW,EAVU,KAUAC,EAVA,KAWAC,cAEJC,aAAY,SAAAC,GAAK,OAAIA,KAElCC,qBAAU,cAEP,IA0CH,OACE,eAAC,IAAMC,SAAP,WACE,cAAC,IAAD,IACA,cAAC,IAAD,IACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBAEA,qBAAKC,UAAU,eAAf,SAEE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,eAAC,IAAD,WACE,qBAAKA,UAAU,YAAf,SACE,oDAEF,uBACA,sBAAKA,UAAU,YAAf,UAECT,EACD,wDAAiC,KAEhCE,EACD,sEAAyCA,KAAgB,KAGzD,uBACIO,UAAU,oBACVC,KAAK,OACLC,YAAY,WACZC,KAAK,WACLC,SAAU,SAACC,GAAQtB,EAAYsB,EAAEC,OAAOC,QACxCC,UAAQ,IAEV,uBACER,UAAU,oBACVC,KAAK,OACLC,YAAY,YACZC,KAAK,YACLC,SAAU,SAACC,GAAQpB,EAAaoB,EAAEC,OAAOC,QACzCC,UAAQ,IAEV,uBACER,UAAU,aACVC,KAAK,OACLC,YAAY,sBACZC,KAAK,sBACLC,SAAU,SAACC,GAAQlB,EAAekB,EAAEC,OAAOC,QAC3CC,UAAQ,OAGZ,qBAAKR,UAAU,aAAf,SACA,sBAAKA,UAAU,YAAf,UACA,uBACIC,KAAK,OACLD,UAAU,kBACVS,GAAG,aACHL,SAAU,SAACC,IArGL,SAACK,GACrB,GAAIA,EAAMJ,OAAOK,OAASD,EAAMJ,OAAOK,MAAM,GAAI,CAC7C,IAAIC,EAAS,IAAIC,WACjBD,EAAOE,OAAS,SAACT,GACbhB,EAAMgB,EAAEC,OAAOS,SAEnBH,EAAOI,cAAcN,EAAMJ,OAAOK,MAAM,KA+FXM,CAAcZ,MAEnC,wBAAOL,UAAU,kBAAkBkB,IAAI,aAAvC,UACI,sBAAMlB,UAAU,iBAAhB,gCACA,sBAAMA,UAAU,mBAAhB,4BAIN,qBAAKA,UAAU,aAAf,SACA,sBAAKA,UAAU,YAAf,UACA,uBACIC,KAAK,OACLD,UAAU,kBACVS,GAAG,aACHL,SAAU,SAACC,GAzGT,IAACK,IAyG4BL,EAxG/Cc,QAAQC,IAAI,OAAQV,EAAMJ,OAAOK,MAAM,IACvCrB,EAAOoB,EAAMJ,OAAOK,MAAM,GAAGU,uBAyGf,wBAAOrB,UAAU,kBAAkBkB,IAAI,aAAvC,UACI,sBAAMlB,UAAU,iBAAhB,6BACA,sBAAMA,UAAU,mBAAhB,4BAIN,uBACA,wBACAA,UAAU,eACVsB,QAAW,SAACjB,IA/GD,SAACA,GACtBA,EAAEkB,iBAEF,IAAMC,EAAS5C,aAAaC,QAAQ,UACpCsC,QAAQC,IAAI,MAAMI,GAClBC,IACKC,KAAK,SAAU,CACZvB,KAAMnB,EACN2C,KAAMzC,EACNE,GAAIA,EACJwC,SAAUJ,EACVK,SAAU,YAEXC,MAAK,SAAAC,GACoB,MAApBA,EAASC,SACXb,QAAQC,IAAI,YAAaW,EAASE,MAClCzC,GAAgB,OAGnB0C,OAAM,SAAAC,GACLhB,QAAQgB,MAAM,QAASA,GACvBzC,EAAY,mCA0FS0C,CAAe/B,IAFlC","file":"static/js/3.9726f2fc.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport axiosMain from '../../http/axios/axios_main';\nimport { toast } from 'react-toastify';\nimport profileImage from '../../assets/images/profile/2.png';\nimport Sidebar from '../../components/Sidebar/Sidebar';\nimport Header from '../../components/Header/Header';\nimport { Row, Col, Container } from \"reactstrap\";\nimport img1 from '../../assets/images/profile/3.png';\nimport img2 from '../../assets/images/img8.png';\nimport CustomDropdown from \"../../components/CustomDropdown/CustomDropdown\";\nimport apj from \"../../assets/images/apache-basics.jpg\"\nimport { SignalCellularNullTwoTone } from '@material-ui/icons';\nfunction shoot() {\n  alert(\"Your book has been added to cart\");\n}\n\nconst Home = () => {\n  const userData = JSON.parse(localStorage.getItem('userData'));\n\n  const [category, setCategory] = useState();\n  const [bookTitle, setBookTitle] = useState();\n  const [description, setDescription] = useState();\n  const [dp, setDp] = useState();\n  const [pdf, setPdf] = useState();\n  const [bookUploaded, setBookUploaded] = useState(false);\n\n  const [errValue, setErrValue] = useState(null);\n  const dispatch = useDispatch();\n\n  const data = useSelector(state => state);\n\n  useEffect(() => {\n\n  }, []);\n\n  const onImageChange = (event) => {\n    if (event.target.files && event.target.files[0]) {\n        let reader = new FileReader();\n        reader.onload = (e) => {\n            setDp(e.target.result);\n        };\n        reader.readAsDataURL(event.target.files[0]);\n    }\n}\n\nconst onPDFChange = (event) => {\n  console.log(\"Here\", event.target.files[0]);\n  setPdf(event.target.files[0].webkitRelativePath)\n  \n}\n  const addBookHandler = (e) => {\n    e.preventDefault();\n\n    const userId = localStorage.getItem('userId');\n    console.log(\"ID:\",userId)\n    axiosMain\n        .post('/book/', {\n            name: bookTitle,\n            desc: description,\n            dp: dp,\n            authname: userId,\n            booktype: \"Textual\"\n          })\n          .then(response => {\n            if (response.status === 200) {\n              console.log(\"Response:\", response.data);\n              setBookUploaded(true);\n            }\n          })\n          .catch(error => {\n            console.error('Error', error);\n            setErrValue(\"This User Book upload Failed\")\n          });\n  }\n\n  return (\n    <React.Fragment>\n      <Header />\n      <Sidebar />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n\n      <div className=\"content-body\">\n\n        <div className=\"container\">\n          <div className=\"row\">\n            <Container>\n              <div className=\"container\">\n                <h2>Upload your Book</h2>\n              </div>\n              <br/>            \n              <div className=\"container\">\n\n              {bookUploaded?\n              <h2>Your Book was uploaded</h2>: null\n                }\n              {errValue?\n              <h2>Your Book Failed to upload because: {errValue}</h2>: null\n                }\n\n              <input\n                  className=\"uploadbooktextbox\"\n                  type=\"text\"\n                  placeholder=\"Category\"\n                  name=\"Category\"\n                  onChange={(e) => { setCategory(e.target.value) }}\n                  required\n                />\n                <input\n                  className=\"uploadbooktextbox\"\n                  type=\"text\"\n                  placeholder=\"BookTitle\"\n                  name=\"BookTitle\"\n                  onChange={(e) => { setBookTitle(e.target.value) }}\n                  required\n                />\n                <input\n                  className=\"reviewtext\"\n                  type=\"text\"\n                  placeholder=\"Description/Summary\"\n                  name=\"Description/Summary\"\n                  onChange={(e) => { setDescription(e.target.value) }}\n                  required\n                />\n              </div>\n              <div className=\"col-xxl-12\">\n              <div className=\"form-file\">\n              <input\n                  type=\"file\"\n                  className=\"form-file-input\"\n                  id=\"customFile\"\n                  onChange={(e) => { onImageChange(e) }}\n              />\n                <label className=\"form-file-label\" for=\"customFile\">\n                    <span className=\"form-file-text\">Choose Cover Photo</span>\n                    <span className=\"form-file-button\">Browse</span>\n                </label>\n              </div>\n              </div>\n              <div className=\"col-xxl-12\">\n              <div className=\"form-file\">\n              <input\n                  type=\"file\"\n                  className=\"form-file-input\"\n                  id=\"customFile\"\n                  onChange={(e) => { onPDFChange(e) }}\n              />\n                <label className=\"form-file-label\" for=\"customFile\">\n                    <span className=\"form-file-text\">Choose PDF File</span>\n                    <span className=\"form-file-button\">Browse</span>\n                </label>\n              </div>\n              </div>\n              <br/>            \n              <button \n              className=\"reviewsubmit\"\n              onClick = {(e) => {addBookHandler(e)}}\n              >\n                  Upload!\n                </button>\n            </Container>\n          </div>\n        </div>\n      </div>\n    </React.Fragment >\n  );\n};\n\nexport default Home;\n"],"sourceRoot":""}